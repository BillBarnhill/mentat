matrix:
  fast_finish: true
  allow_failures:
    - rust: nightly
  include:
    - language: rust
      # We use OSX so that we can get a reasonably up to date version of SQLCipher.
      # (The version in Travis's default Ubuntu Trusty is much too old).
      os: osx
      before_install:
        - brew install sqlcipher --with-fts
      rust: 1.25.0  # Must align with `build/version.rs`.
      script:
        - ./scripts/cargo_test.sh
      after_success:
        - |
          if [[ "$TRAVIS_PULL_REQUEST" = "false" && "$TRAVIS_BRANCH" == "master" ]]; then
            cargo doc &&
            echo "<meta http-equiv=refresh content=0;url=mentat/index.html>" > target/doc/index.html &&
            git clone https://github.com/davisp/ghp-import.git &&
            ./ghp-import/ghp_import.py -n -p -f -r https://"$GH_TOKEN"@github.com/"$TRAVIS_REPO_SLUG.git" target/doc
          fi
      cache: cargo
    - language: rust
      # We use OSX so that we can get a reasonably up to date version of SQLCipher.
      # (The version in Travis's default Ubuntu Trusty is much too old).
      os: osx
      before_install:
        - brew install sqlcipher --with-fts
      rust: stable
      script:
        - ./scripts/cargo_test.sh
      cache: cargo
    - language: rust
      # We use OSX so that we can get a reasonably up to date version of SQLCipher.
      # (The version in Travis's default Ubuntu Trusty is much too old).
      os: osx
      before_install:
        - brew install sqlcipher --with-fts
      rust: beta
      script:
        - ./scripts/cargo_test.sh
      cache: cargo
    - language: rust
      # We use OSX so that we can get a reasonably up to date version of SQLCipher.
      # (The version in Travis's default Ubuntu Trusty is much too old).
      os: osx
      before_install:
        - brew install sqlcipher --with-fts
      rust: nightly
      script:
        - ./scripts/cargo_test.sh
      cache: cargo
    - language: rust
      dist: trusty
      rust: stable
      jdk:
        - oraclejdk8
      env:
        # Get revision number from https://dl.google.com/android/repository/repository2-1.xml
        # Look for the string 'sdk-tools-linux-'.
        - ANDROID_SDK_VERSION=4333796

      before_install:
        - >
          PKG_OS="$TRAVIS_OS_NAME";
          export ANDROID_HOME="${HOME}/android-sdk";
          export PATH=$PATH:"${ANDROID_HOME}/tools/bin";
          mkdir $ANDROID_HOME
      install:
        # SDK Tools.
        - >
          curl -o sdk.zip "https://dl.google.com/android/repository/sdk-tools-${PKG_OS}-${ANDROID_SDK_VERSION}.zip" &&
          unzip -q sdk.zip -d $ANDROID_HOME;  > /dev/null
        # Android SDK and NDK
        # Unfortunately we need to get rid of all output, otherwise it can easily fill up the 4 MB log limit
        - yes | sdkmanager --licenses > /dev/null
        - sdkmanager 'platform-tools' 'build-tools;27.0.0' 'platforms;android-27' 'ndk-bundle' > /dev/null
      script:
        - cd sdks/android/Mentat
        - ./gradlew --no-daemon clean :library:assemble :library:test :library:lint
        - cd ../../..
    - language: rust
      dist: trusty
      rust: stable
      os: osx
      before_install:
        - PKG_OS="darwin";
      install:
        - |
        rustup target add aarch64-apple-ios armv7-apple-ios armv7s-apple-ios x86_64-apple-ios i386-apple-ios
        cargo install cargo-lipo
      script:
        - ./scripts/ios_build.sh
        - |
          cd sdks/swift/Mentat
          xcodebuild -configuration Debug -scheme "Mentat Debug" -sdk iphonesimulator test -destination 'platform=iOS Simulator,name=iPhone SE,OS=latest' | xcpretty
          cd ../../..
